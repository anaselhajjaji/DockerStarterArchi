version: '3'

networks:
  backendnet:
    driver: bridge
  frontendnet:
    driver: bridge

services:
  postgresdb:
    hostname: ${POSTGRESQL_HOST_NAME}
    build: ./postgresql-node
    networks:
      - backendnet
    ports:
      - ${POSTGRESQL_PORT_NUMBER}:${POSTGRESQL_PORT_NUMBER}
  
  netcoreapi:
    build: ./netcoreapi-node
    networks:
      - backendnet
    ports:
      - 8081:80

  nodejsrestapi:
    build: ./nodejs-node
    networks:
      - backendnet
    ports:
      - ${NODEJS_LISTEN_PORT_NUMBER}:${NODEJS_LISTEN_PORT_NUMBER}
    environment:
      POSTGRESQL_HOST_NAME: ${POSTGRESQL_HOST_NAME}
      POSTGRESQL_PORT_NUMBER: ${POSTGRESQL_PORT_NUMBER}
      POSTGRESQL_DATABASE_NAME: ${POSTGRESQL_DATABASE_NAME}
      POSTGRESQL_DATABASE_USER: ${POSTGRESQL_DATABASE_USER}
      POSTGRESQL_DATABASE_USER_PASSWORD: ${POSTGRESQL_DATABASE_USER_PASSWORD}
      NODEJS_LISTEN_PORT_NUMBER: ${NODEJS_LISTEN_PORT_NUMBER}
    depends_on:
      - postgresdb

  springbootapi:
    build: ./sample-springboot
    networks:
      - backendnet
    ports:
      - 8082:8080
    command: mvn clean spring-boot:run
    depends_on:
      - mongodb

  mongodb:
    image: mongo
    networks:
      - backendnet
    ports:
      - "27017:27017"

  mongo-seed:
    build: ./mongo-seed-populate
    networks:
      - backendnet
    links:
      - mongodb

  angularwebsite:
    build: ./angularjs-node
    networks:
      - frontendnet
    ports:
      - 80:80
